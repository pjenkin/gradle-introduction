
/*
* https://www.youtube.com/watch?v=OFUEb7pLLXw
* A task is an object - a task has an API - has a list of activities
* tasks form a Directed Acyclis Graph - graph of dependencies built before build executed
* acyclic in that a cirle of A on B and B on A will be detected & warned-of
* graph listed during 'configuration phase'
* trying to have build code delcarative rather than imperative
*/



task hello    // declare task
task world

task helloWorld {   // declaration & definition of task
  dependsOn = [world, hello]
}
// NB gradle hW would run helloWorld


// define task
world {
  dependsOn << hello
  // dependsOn property is a collection so << adding, as opposed to = assign 
  doLast {
    println "world"
  }
}

hello
{
  doLast  {
    print "Hello "
  }
}
// NB run gradle -q mytask for quiet, non-verbose output


/*
// defined tasks can be run eg "gradle helloWorld"
helloWorld
{
  doLast
  {
    println "Hello world"
  }
}
*/
